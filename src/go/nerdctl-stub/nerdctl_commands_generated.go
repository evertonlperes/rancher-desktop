// Code generated by github.com/rancher-sandbox/rancher-desktop/src/go/nerdctl-stub/generate - DO NOT EDIT.

// package main implements a stub for nerdctl
package main

// commands supported by nerdctl; the key here is a space-separated subcommand
// path to reach the given subcommand (where the root command is empty).
var commands = map[string]commandDefinition{

	"": {
		commandPath: "",
		subcommands: map[string]struct{}{
			"apparmor":   {},
			"build":      {},
			"commit":     {},
			"completion": {},
			"compose":    {},
			"container":  {},
			"create":     {},
			"events":     {},
			"exec":       {},
			"help":       {},
			"image":      {},
			"images":     {},
			"info":       {},
			"inspect":    {},
			"ipfs":       {},
			"kill":       {},
			"load":       {},
			"login":      {},
			"logout":     {},
			"logs":       {},
			"namespace":  {},
			"network":    {},
			"pause":      {},
			"port":       {},
			"ps":         {},
			"pull":       {},
			"push":       {},
			"restart":    {},
			"rm":         {},
			"rmi":        {},
			"run":        {},
			"save":       {},
			"start":      {},
			"stats":      {},
			"stop":       {},
			"system":     {},
			"tag":        {},
			"top":        {},
			"unpause":    {},
			"version":    {},
			"volume":     {},
			"wait":       {},
		},
		options: map[string]argHandler{
			"--H":                 ignoredArgHandler,
			"--a":                 ignoredArgHandler,
			"--address":           ignoredArgHandler,
			"--cgroup-manager":    ignoredArgHandler,
			"--cni-netconfpath":   ignoredArgHandler,
			"--cni-path":          ignoredArgHandler,
			"--data-root":         ignoredArgHandler,
			"--debug":             nil,
			"--debug-full":        nil,
			"--help":              nil,
			"--host":              ignoredArgHandler,
			"--hosts-dir":         ignoredArgHandler,
			"--insecure-registry": nil,
			"--n":                 ignoredArgHandler,
			"--namespace":         ignoredArgHandler,
			"--snapshotter":       ignoredArgHandler,
			"--storage-driver":    ignoredArgHandler,
			"--version":           nil,
			"-H":                  ignoredArgHandler,
			"-a":                  ignoredArgHandler,
			"-h":                  nil,
			"-n":                  ignoredArgHandler,
			"-v":                  nil,
		},
	},

	"apparmor": {
		commandPath: "apparmor",
		subcommands: map[string]struct{}{
			"inspect": {},
			"load":    {},
			"ls":      {},
			"unload":  {},
		},
		options: map[string]argHandler{},
	},

	"apparmor inspect": {
		commandPath: "apparmor inspect",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"apparmor load": {
		commandPath: "apparmor load",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"apparmor ls": {
		commandPath: "apparmor ls",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"--quiet":  nil,
			"-q":       nil,
		},
	},

	"apparmor unload": {
		commandPath: "apparmor unload",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"build": {
		commandPath: "build",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--build-arg":     ignoredArgHandler,
			"--buildkit-host": ignoredArgHandler,
			"--cache-from":    ignoredArgHandler,
			"--cache-to":      ignoredArgHandler,
			"--file":          ignoredArgHandler,
			"--iidfile":       ignoredArgHandler,
			"--ipfs":          nil,
			"--label":         ignoredArgHandler,
			"--no-cache":      nil,
			"--output":        ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"--progress":      ignoredArgHandler,
			"--quiet":         nil,
			"--rm":            nil,
			"--secret":        ignoredArgHandler,
			"--ssh":           ignoredArgHandler,
			"--tag":           ignoredArgHandler,
			"--target":        ignoredArgHandler,
			"-f":              ignoredArgHandler,
			"-o":              ignoredArgHandler,
			"-q":              nil,
			"-t":              ignoredArgHandler,
		},
	},

	"commit": {
		commandPath: "commit",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--author":  ignoredArgHandler,
			"--change":  ignoredArgHandler,
			"--message": ignoredArgHandler,
			"--pause":   nil,
			"-a":        ignoredArgHandler,
			"-c":        ignoredArgHandler,
			"-m":        ignoredArgHandler,
			"-p":        nil,
		},
	},

	"completion": {
		commandPath: "completion",
		subcommands: map[string]struct{}{
			"bash":       {},
			"fish":       {},
			"powershell": {},
			"zsh":        {},
		},
		options: map[string]argHandler{},
	},

	"completion bash": {
		commandPath: "completion bash",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--no-descriptions": nil,
		},
	},

	"completion fish": {
		commandPath: "completion fish",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--no-descriptions": nil,
		},
	},

	"completion powershell": {
		commandPath: "completion powershell",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--no-descriptions": nil,
		},
	},

	"completion zsh": {
		commandPath: "completion zsh",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--no-descriptions": nil,
		},
	},

	"compose": {
		commandPath: "compose",
		subcommands: map[string]struct{}{
			"build":  {},
			"config": {},
			"down":   {},
			"kill":   {},
			"logs":   {},
			"ps":     {},
			"pull":   {},
			"push":   {},
			"up":     {},
		},
		options: map[string]argHandler{
			"--env-file":          ignoredArgHandler,
			"--f":                 ignoredArgHandler,
			"--file":              ignoredArgHandler,
			"--project-directory": ignoredArgHandler,
			"--project-name":      ignoredArgHandler,
			"-f":                  ignoredArgHandler,
			"-p":                  ignoredArgHandler,
		},
	},

	"compose build": {
		commandPath: "compose build",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--build-arg": ignoredArgHandler,
			"--ipfs":      nil,
			"--no-cache":  nil,
			"--progress":  ignoredArgHandler,
		},
	},

	"compose config": {
		commandPath: "compose config",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--hash":     ignoredArgHandler,
			"--quiet":    nil,
			"--services": nil,
			"--volumes":  nil,
			"-q":         nil,
		},
	},

	"compose down": {
		commandPath: "compose down",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--volumes": ignoredArgHandler,
			"-v":        ignoredArgHandler,
		},
	},

	"compose kill": {
		commandPath: "compose kill",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--signal": ignoredArgHandler,
			"-s":       ignoredArgHandler,
		},
	},

	"compose logs": {
		commandPath: "compose logs",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--follow":        nil,
			"--no-color":      nil,
			"--no-log-prefix": nil,
			"--tail":          ignoredArgHandler,
			"--timestamps":    nil,
			"-f":              nil,
			"-t":              nil,
		},
	},

	"compose ps": {
		commandPath: "compose ps",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"compose pull": {
		commandPath: "compose pull",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--quiet": nil,
			"-q":      nil,
		},
	},

	"compose push": {
		commandPath: "compose push",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"compose up": {
		commandPath: "compose up",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--build":         nil,
			"--detach":        nil,
			"--ipfs":          nil,
			"--no-build":      nil,
			"--no-color":      nil,
			"--no-log-prefix": nil,
			"--quiet-pull":    nil,
			"--scale":         ignoredArgHandler,
			"-d":              nil,
		},
	},

	"container": {
		commandPath: "container",
		subcommands: map[string]struct{}{
			"commit":  {},
			"create":  {},
			"exec":    {},
			"inspect": {},
			"kill":    {},
			"logs":    {},
			"ls":      {},
			"pause":   {},
			"port":    {},
			"restart": {},
			"rm":      {},
			"run":     {},
			"start":   {},
			"stop":    {},
			"unpause": {},
			"wait":    {},
		},
		options: map[string]argHandler{},
	},

	"container commit": {
		commandPath: "container commit",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--author":  ignoredArgHandler,
			"--change":  ignoredArgHandler,
			"--message": ignoredArgHandler,
			"--pause":   nil,
			"-a":        ignoredArgHandler,
			"-c":        ignoredArgHandler,
			"-m":        ignoredArgHandler,
			"-p":        nil,
		},
	},

	"container create": {
		commandPath: "container create",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--add-host":     ignoredArgHandler,
			"--blkio-weight": ignoredArgHandler,
			"--cap-add":      ignoredArgHandler,
			"--cap-drop":     ignoredArgHandler,
			"--cgroup-conf":  ignoredArgHandler,
			"--cgroupns":     ignoredArgHandler,
			"--cidfile":      ignoredArgHandler,
			"--cosign-key":   ignoredArgHandler,
			"--cpu-period":   ignoredArgHandler,
			"--cpu-quota":    ignoredArgHandler,
			"--cpu-shares":   ignoredArgHandler,
			"--cpus":         ignoredArgHandler,
			"--cpuset-cpus":  ignoredArgHandler,
			"--cpuset-mems":  ignoredArgHandler,
			"--device":       ignoredArgHandler,
			"--dns":          ignoredArgHandler,
			"--entrypoint":   ignoredArgHandler,
			"--env":          ignoredArgHandler,
			"--env-file":     ignoredArgHandler,
			"--gpus":         ignoredArgHandler,
			"--hostname":     ignoredArgHandler,
			"--interactive":  nil,
			"--label":        ignoredArgHandler,
			"--label-file":   ignoredArgHandler,
			"--memory":       ignoredArgHandler,
			"--name":         ignoredArgHandler,
			"--net":          ignoredArgHandler,
			"--network":      ignoredArgHandler,
			"--pid":          ignoredArgHandler,
			"--pidfile":      ignoredArgHandler,
			"--pids-limit":   ignoredArgHandler,
			"--platform":     ignoredArgHandler,
			"--privileged":   nil,
			"--publish":      ignoredArgHandler,
			"--pull":         ignoredArgHandler,
			"--rdt-class":    ignoredArgHandler,
			"--read-only":    nil,
			"--restart":      ignoredArgHandler,
			"--rm":           nil,
			"--rootfs":       nil,
			"--runtime":      ignoredArgHandler,
			"--security-opt": ignoredArgHandler,
			"--shm-size":     ignoredArgHandler,
			"--sysctl":       ignoredArgHandler,
			"--tmpfs":        ignoredArgHandler,
			"--tty":          nil,
			"--ulimit":       ignoredArgHandler,
			"--user":         ignoredArgHandler,
			"--verify":       ignoredArgHandler,
			"--volume":       ignoredArgHandler,
			"--workdir":      ignoredArgHandler,
			"-e":             ignoredArgHandler,
			"-h":             ignoredArgHandler,
			"-i":             nil,
			"-l":             ignoredArgHandler,
			"-m":             ignoredArgHandler,
			"-p":             ignoredArgHandler,
			"-t":             nil,
			"-u":             ignoredArgHandler,
			"-v":             ignoredArgHandler,
			"-w":             ignoredArgHandler,
		},
	},

	"container exec": {
		commandPath: "container exec",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--detach":      nil,
			"--env":         ignoredArgHandler,
			"--env-file":    ignoredArgHandler,
			"--interactive": nil,
			"--privileged":  nil,
			"--tty":         nil,
			"--user":        ignoredArgHandler,
			"--workdir":     ignoredArgHandler,
			"-d":            nil,
			"-e":            ignoredArgHandler,
			"-i":            nil,
			"-t":            nil,
			"-u":            ignoredArgHandler,
			"-w":            ignoredArgHandler,
		},
	},

	"container inspect": {
		commandPath: "container inspect",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"--mode":   ignoredArgHandler,
			"-f":       ignoredArgHandler,
		},
	},

	"container kill": {
		commandPath: "container kill",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--signal": ignoredArgHandler,
			"-s":       ignoredArgHandler,
		},
	},

	"container logs": {
		commandPath: "container logs",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--follow":     nil,
			"--since":      ignoredArgHandler,
			"--tail":       ignoredArgHandler,
			"--timestamps": nil,
			"--until":      ignoredArgHandler,
			"-f":           nil,
			"-n":           ignoredArgHandler,
			"-t":           nil,
		},
	},

	"container ls": {
		commandPath: "container ls",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all":      nil,
			"--format":   ignoredArgHandler,
			"--last":     ignoredArgHandler,
			"--latest":   nil,
			"--no-trunc": nil,
			"--quiet":    nil,
			"-a":         nil,
			"-l":         nil,
			"-n":         ignoredArgHandler,
			"-q":         nil,
		},
	},

	"container pause": {
		commandPath: "container pause",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"container port": {
		commandPath: "container port",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"container restart": {
		commandPath: "container restart",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--time": ignoredArgHandler,
			"-t":     ignoredArgHandler,
		},
	},

	"container rm": {
		commandPath: "container rm",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--force":   nil,
			"--volumes": nil,
			"-f":        nil,
			"-v":        nil,
		},
	},

	"container run": {
		commandPath: "container run",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--add-host":     ignoredArgHandler,
			"--blkio-weight": ignoredArgHandler,
			"--cap-add":      ignoredArgHandler,
			"--cap-drop":     ignoredArgHandler,
			"--cgroup-conf":  ignoredArgHandler,
			"--cgroupns":     ignoredArgHandler,
			"--cidfile":      ignoredArgHandler,
			"--cosign-key":   ignoredArgHandler,
			"--cpu-period":   ignoredArgHandler,
			"--cpu-quota":    ignoredArgHandler,
			"--cpu-shares":   ignoredArgHandler,
			"--cpus":         ignoredArgHandler,
			"--cpuset-cpus":  ignoredArgHandler,
			"--cpuset-mems":  ignoredArgHandler,
			"--detach":       nil,
			"--device":       ignoredArgHandler,
			"--dns":          ignoredArgHandler,
			"--entrypoint":   ignoredArgHandler,
			"--env":          ignoredArgHandler,
			"--env-file":     ignoredArgHandler,
			"--gpus":         ignoredArgHandler,
			"--hostname":     ignoredArgHandler,
			"--interactive":  nil,
			"--label":        ignoredArgHandler,
			"--label-file":   ignoredArgHandler,
			"--memory":       ignoredArgHandler,
			"--name":         ignoredArgHandler,
			"--net":          ignoredArgHandler,
			"--network":      ignoredArgHandler,
			"--pid":          ignoredArgHandler,
			"--pidfile":      ignoredArgHandler,
			"--pids-limit":   ignoredArgHandler,
			"--platform":     ignoredArgHandler,
			"--privileged":   nil,
			"--publish":      ignoredArgHandler,
			"--pull":         ignoredArgHandler,
			"--rdt-class":    ignoredArgHandler,
			"--read-only":    nil,
			"--restart":      ignoredArgHandler,
			"--rm":           nil,
			"--rootfs":       nil,
			"--runtime":      ignoredArgHandler,
			"--security-opt": ignoredArgHandler,
			"--shm-size":     ignoredArgHandler,
			"--sysctl":       ignoredArgHandler,
			"--tmpfs":        ignoredArgHandler,
			"--tty":          nil,
			"--ulimit":       ignoredArgHandler,
			"--user":         ignoredArgHandler,
			"--verify":       ignoredArgHandler,
			"--volume":       ignoredArgHandler,
			"--workdir":      ignoredArgHandler,
			"-d":             nil,
			"-e":             ignoredArgHandler,
			"-h":             ignoredArgHandler,
			"-i":             nil,
			"-l":             ignoredArgHandler,
			"-m":             ignoredArgHandler,
			"-p":             ignoredArgHandler,
			"-t":             nil,
			"-u":             ignoredArgHandler,
			"-v":             ignoredArgHandler,
			"-w":             ignoredArgHandler,
		},
	},

	"container start": {
		commandPath: "container start",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"container stop": {
		commandPath: "container stop",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--time": ignoredArgHandler,
			"-t":     ignoredArgHandler,
		},
	},

	"container unpause": {
		commandPath: "container unpause",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"container wait": {
		commandPath: "container wait",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"create": {
		commandPath: "create",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--add-host":     ignoredArgHandler,
			"--blkio-weight": ignoredArgHandler,
			"--cap-add":      ignoredArgHandler,
			"--cap-drop":     ignoredArgHandler,
			"--cgroup-conf":  ignoredArgHandler,
			"--cgroupns":     ignoredArgHandler,
			"--cidfile":      ignoredArgHandler,
			"--cosign-key":   ignoredArgHandler,
			"--cpu-period":   ignoredArgHandler,
			"--cpu-quota":    ignoredArgHandler,
			"--cpu-shares":   ignoredArgHandler,
			"--cpus":         ignoredArgHandler,
			"--cpuset-cpus":  ignoredArgHandler,
			"--cpuset-mems":  ignoredArgHandler,
			"--device":       ignoredArgHandler,
			"--dns":          ignoredArgHandler,
			"--entrypoint":   ignoredArgHandler,
			"--env":          ignoredArgHandler,
			"--env-file":     ignoredArgHandler,
			"--gpus":         ignoredArgHandler,
			"--hostname":     ignoredArgHandler,
			"--interactive":  nil,
			"--label":        ignoredArgHandler,
			"--label-file":   ignoredArgHandler,
			"--memory":       ignoredArgHandler,
			"--name":         ignoredArgHandler,
			"--net":          ignoredArgHandler,
			"--network":      ignoredArgHandler,
			"--pid":          ignoredArgHandler,
			"--pidfile":      ignoredArgHandler,
			"--pids-limit":   ignoredArgHandler,
			"--platform":     ignoredArgHandler,
			"--privileged":   nil,
			"--publish":      ignoredArgHandler,
			"--pull":         ignoredArgHandler,
			"--rdt-class":    ignoredArgHandler,
			"--read-only":    nil,
			"--restart":      ignoredArgHandler,
			"--rm":           nil,
			"--rootfs":       nil,
			"--runtime":      ignoredArgHandler,
			"--security-opt": ignoredArgHandler,
			"--shm-size":     ignoredArgHandler,
			"--sysctl":       ignoredArgHandler,
			"--tmpfs":        ignoredArgHandler,
			"--tty":          nil,
			"--ulimit":       ignoredArgHandler,
			"--user":         ignoredArgHandler,
			"--verify":       ignoredArgHandler,
			"--volume":       ignoredArgHandler,
			"--workdir":      ignoredArgHandler,
			"-e":             ignoredArgHandler,
			"-h":             ignoredArgHandler,
			"-i":             nil,
			"-l":             ignoredArgHandler,
			"-m":             ignoredArgHandler,
			"-p":             ignoredArgHandler,
			"-t":             nil,
			"-u":             ignoredArgHandler,
			"-v":             ignoredArgHandler,
			"-w":             ignoredArgHandler,
		},
	},

	"events": {
		commandPath: "events",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
		},
	},

	"exec": {
		commandPath: "exec",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--detach":      nil,
			"--env":         ignoredArgHandler,
			"--env-file":    ignoredArgHandler,
			"--interactive": nil,
			"--privileged":  nil,
			"--tty":         nil,
			"--user":        ignoredArgHandler,
			"--workdir":     ignoredArgHandler,
			"-d":            nil,
			"-e":            ignoredArgHandler,
			"-i":            nil,
			"-t":            nil,
			"-u":            ignoredArgHandler,
			"-w":            ignoredArgHandler,
		},
	},

	"help": {
		commandPath: "help",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"image": {
		commandPath: "image",
		subcommands: map[string]struct{}{
			"build":   {},
			"convert": {},
			"decrypt": {},
			"encrypt": {},
			"inspect": {},
			"load":    {},
			"ls":      {},
			"pull":    {},
			"push":    {},
			"rm":      {},
			"save":    {},
			"tag":     {},
		},
		options: map[string]argHandler{},
	},

	"image build": {
		commandPath: "image build",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--build-arg":     ignoredArgHandler,
			"--buildkit-host": ignoredArgHandler,
			"--cache-from":    ignoredArgHandler,
			"--cache-to":      ignoredArgHandler,
			"--file":          ignoredArgHandler,
			"--iidfile":       ignoredArgHandler,
			"--ipfs":          nil,
			"--label":         ignoredArgHandler,
			"--no-cache":      nil,
			"--output":        ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"--progress":      ignoredArgHandler,
			"--quiet":         nil,
			"--rm":            nil,
			"--secret":        ignoredArgHandler,
			"--ssh":           ignoredArgHandler,
			"--tag":           ignoredArgHandler,
			"--target":        ignoredArgHandler,
			"-f":              ignoredArgHandler,
			"-o":              ignoredArgHandler,
			"-q":              nil,
			"-t":              ignoredArgHandler,
		},
	},

	"image convert": {
		commandPath: "image convert",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms":             nil,
			"--estargz":                   nil,
			"--estargz-chunk-size":        ignoredArgHandler,
			"--estargz-compression-level": ignoredArgHandler,
			"--estargz-record-in":         ignoredArgHandler,
			"--oci":                       nil,
			"--platform":                  ignoredArgHandler,
			"--uncompress":                nil,
			"--zstdchunked":               nil,
		},
	},

	"image decrypt": {
		commandPath: "image decrypt",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--dec-recipient": ignoredArgHandler,
			"--gpg-homedir":   ignoredArgHandler,
			"--gpg-version":   ignoredArgHandler,
			"--key":           ignoredArgHandler,
			"--platform":      ignoredArgHandler,
		},
	},

	"image encrypt": {
		commandPath: "image encrypt",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--dec-recipient": ignoredArgHandler,
			"--gpg-homedir":   ignoredArgHandler,
			"--gpg-version":   ignoredArgHandler,
			"--key":           ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"--recipient":     ignoredArgHandler,
		},
	},

	"image inspect": {
		commandPath: "image inspect",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format":   ignoredArgHandler,
			"--mode":     ignoredArgHandler,
			"--platform": ignoredArgHandler,
			"-f":         ignoredArgHandler,
		},
	},

	"image load": {
		commandPath: "image load",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--input":         ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"-i":              ignoredArgHandler,
		},
	},

	"image ls": {
		commandPath: "image ls",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all":      nil,
			"--digests":  nil,
			"--format":   ignoredArgHandler,
			"--no-trunc": nil,
			"--quiet":    nil,
			"-a":         nil,
			"-q":         nil,
		},
	},

	"image pull": {
		commandPath: "image pull",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--cosign-key":    ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"--quiet":         nil,
			"--unpack":        ignoredArgHandler,
			"--verify":        ignoredArgHandler,
			"-q":              nil,
		},
	},

	"image push": {
		commandPath: "image push",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms":     nil,
			"--cosign-key":        ignoredArgHandler,
			"--estargz":           nil,
			"--ipfs-ensure-image": nil,
			"--platform":          ignoredArgHandler,
			"--sign":              ignoredArgHandler,
		},
	},

	"image rm": {
		commandPath: "image rm",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--async": nil,
			"--force": nil,
			"-f":      nil,
		},
	},

	"image save": {
		commandPath: "image save",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--output":        ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"-o":              ignoredArgHandler,
		},
	},

	"image tag": {
		commandPath: "image tag",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"images": {
		commandPath: "images",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all":      nil,
			"--digests":  nil,
			"--format":   ignoredArgHandler,
			"--no-trunc": nil,
			"--quiet":    nil,
			"-a":         nil,
			"-q":         nil,
		},
	},

	"info": {
		commandPath: "info",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"-f":       ignoredArgHandler,
		},
	},

	"inspect": {
		commandPath: "inspect",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"--mode":   ignoredArgHandler,
			"-f":       ignoredArgHandler,
		},
	},

	"ipfs": {
		commandPath: "ipfs",
		subcommands: map[string]struct{}{
			"registry": {},
		},
		options: map[string]argHandler{},
	},

	"ipfs registry": {
		commandPath: "ipfs registry",
		subcommands: map[string]struct{}{
			"down":  {},
			"serve": {},
			"up":    {},
		},
		options: map[string]argHandler{},
	},

	"ipfs registry down": {
		commandPath: "ipfs registry down",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"ipfs registry serve": {
		commandPath: "ipfs registry serve",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--ipfs-address":    ignoredArgHandler,
			"--listen-registry": ignoredArgHandler,
			"--read-retry-num":  ignoredArgHandler,
			"--read-timeout":    ignoredArgHandler,
		},
	},

	"ipfs registry up": {
		commandPath: "ipfs registry up",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--listen-registry": ignoredArgHandler,
			"--read-retry-num":  ignoredArgHandler,
			"--read-timeout":    ignoredArgHandler,
		},
	},

	"kill": {
		commandPath: "kill",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--signal": ignoredArgHandler,
			"-s":       ignoredArgHandler,
		},
	},

	"load": {
		commandPath: "load",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--input":         ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"-i":              ignoredArgHandler,
		},
	},

	"login": {
		commandPath: "login",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--password":       ignoredArgHandler,
			"--password-stdin": nil,
			"--username":       ignoredArgHandler,
			"-p":               ignoredArgHandler,
			"-u":               ignoredArgHandler,
		},
	},

	"logout": {
		commandPath: "logout",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"logs": {
		commandPath: "logs",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--follow":     nil,
			"--since":      ignoredArgHandler,
			"--tail":       ignoredArgHandler,
			"--timestamps": nil,
			"--until":      ignoredArgHandler,
			"-f":           nil,
			"-n":           ignoredArgHandler,
			"-t":           nil,
		},
	},

	"namespace": {
		commandPath: "namespace",
		subcommands: map[string]struct{}{
			"ls": {},
		},
		options: map[string]argHandler{},
	},

	"namespace ls": {
		commandPath: "namespace ls",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--quiet": nil,
			"-q":      nil,
		},
	},

	"network": {
		commandPath: "network",
		subcommands: map[string]struct{}{
			"create":  {},
			"inspect": {},
			"ls":      {},
			"rm":      {},
		},
		options: map[string]argHandler{},
	},

	"network create": {
		commandPath: "network create",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--label":  ignoredArgHandler,
			"--subnet": ignoredArgHandler,
		},
	},

	"network inspect": {
		commandPath: "network inspect",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"--mode":   ignoredArgHandler,
			"-f":       ignoredArgHandler,
		},
	},

	"network ls": {
		commandPath: "network ls",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"--quiet":  nil,
			"-q":       nil,
		},
	},

	"network rm": {
		commandPath: "network rm",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"pause": {
		commandPath: "pause",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"port": {
		commandPath: "port",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"ps": {
		commandPath: "ps",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all":      nil,
			"--format":   ignoredArgHandler,
			"--last":     ignoredArgHandler,
			"--latest":   nil,
			"--no-trunc": nil,
			"--quiet":    nil,
			"-a":         nil,
			"-l":         nil,
			"-n":         ignoredArgHandler,
			"-q":         nil,
		},
	},

	"pull": {
		commandPath: "pull",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--cosign-key":    ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"--quiet":         nil,
			"--unpack":        ignoredArgHandler,
			"--verify":        ignoredArgHandler,
			"-q":              nil,
		},
	},

	"push": {
		commandPath: "push",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms":     nil,
			"--cosign-key":        ignoredArgHandler,
			"--estargz":           nil,
			"--ipfs-ensure-image": nil,
			"--platform":          ignoredArgHandler,
			"--sign":              ignoredArgHandler,
		},
	},

	"restart": {
		commandPath: "restart",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--time": ignoredArgHandler,
			"-t":     ignoredArgHandler,
		},
	},

	"rm": {
		commandPath: "rm",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--force":   nil,
			"--volumes": nil,
			"-f":        nil,
			"-v":        nil,
		},
	},

	"rmi": {
		commandPath: "rmi",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--async": nil,
			"--force": nil,
			"-f":      nil,
		},
	},

	"run": {
		commandPath: "run",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--add-host":     ignoredArgHandler,
			"--blkio-weight": ignoredArgHandler,
			"--cap-add":      ignoredArgHandler,
			"--cap-drop":     ignoredArgHandler,
			"--cgroup-conf":  ignoredArgHandler,
			"--cgroupns":     ignoredArgHandler,
			"--cidfile":      ignoredArgHandler,
			"--cosign-key":   ignoredArgHandler,
			"--cpu-period":   ignoredArgHandler,
			"--cpu-quota":    ignoredArgHandler,
			"--cpu-shares":   ignoredArgHandler,
			"--cpus":         ignoredArgHandler,
			"--cpuset-cpus":  ignoredArgHandler,
			"--cpuset-mems":  ignoredArgHandler,
			"--detach":       nil,
			"--device":       ignoredArgHandler,
			"--dns":          ignoredArgHandler,
			"--entrypoint":   ignoredArgHandler,
			"--env":          ignoredArgHandler,
			"--env-file":     ignoredArgHandler,
			"--gpus":         ignoredArgHandler,
			"--hostname":     ignoredArgHandler,
			"--interactive":  nil,
			"--label":        ignoredArgHandler,
			"--label-file":   ignoredArgHandler,
			"--memory":       ignoredArgHandler,
			"--name":         ignoredArgHandler,
			"--net":          ignoredArgHandler,
			"--network":      ignoredArgHandler,
			"--pid":          ignoredArgHandler,
			"--pidfile":      ignoredArgHandler,
			"--pids-limit":   ignoredArgHandler,
			"--platform":     ignoredArgHandler,
			"--privileged":   nil,
			"--publish":      ignoredArgHandler,
			"--pull":         ignoredArgHandler,
			"--rdt-class":    ignoredArgHandler,
			"--read-only":    nil,
			"--restart":      ignoredArgHandler,
			"--rm":           nil,
			"--rootfs":       nil,
			"--runtime":      ignoredArgHandler,
			"--security-opt": ignoredArgHandler,
			"--shm-size":     ignoredArgHandler,
			"--sysctl":       ignoredArgHandler,
			"--tmpfs":        ignoredArgHandler,
			"--tty":          nil,
			"--ulimit":       ignoredArgHandler,
			"--user":         ignoredArgHandler,
			"--verify":       ignoredArgHandler,
			"--volume":       ignoredArgHandler,
			"--workdir":      ignoredArgHandler,
			"-d":             nil,
			"-e":             ignoredArgHandler,
			"-h":             ignoredArgHandler,
			"-i":             nil,
			"-l":             ignoredArgHandler,
			"-m":             ignoredArgHandler,
			"-p":             ignoredArgHandler,
			"-t":             nil,
			"-u":             ignoredArgHandler,
			"-v":             ignoredArgHandler,
			"-w":             ignoredArgHandler,
		},
	},

	"save": {
		commandPath: "save",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all-platforms": nil,
			"--output":        ignoredArgHandler,
			"--platform":      ignoredArgHandler,
			"-o":              ignoredArgHandler,
		},
	},

	"start": {
		commandPath: "start",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"stats": {
		commandPath: "stats",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--all":       nil,
			"--format":    ignoredArgHandler,
			"--no-stream": nil,
			"--no-trunc":  nil,
			"-a":          nil,
		},
	},

	"stop": {
		commandPath: "stop",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--time": ignoredArgHandler,
			"-t":     ignoredArgHandler,
		},
	},

	"system": {
		commandPath: "system",
		subcommands: map[string]struct{}{
			"events": {},
			"info":   {},
		},
		options: map[string]argHandler{},
	},

	"system events": {
		commandPath: "system events",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
		},
	},

	"system info": {
		commandPath: "system info",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"-f":       ignoredArgHandler,
		},
	},

	"tag": {
		commandPath: "tag",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"top": {
		commandPath: "top",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"unpause": {
		commandPath: "unpause",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},

	"version": {
		commandPath: "version",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"-f":       ignoredArgHandler,
		},
	},

	"volume": {
		commandPath: "volume",
		subcommands: map[string]struct{}{
			"create":  {},
			"inspect": {},
			"ls":      {},
			"rm":      {},
		},
		options: map[string]argHandler{},
	},

	"volume create": {
		commandPath: "volume create",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--label": ignoredArgHandler,
		},
	},

	"volume inspect": {
		commandPath: "volume inspect",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"-f":       ignoredArgHandler,
		},
	},

	"volume ls": {
		commandPath: "volume ls",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--format": ignoredArgHandler,
			"--quiet":  nil,
			"-q":       nil,
		},
	},

	"volume rm": {
		commandPath: "volume rm",
		subcommands: map[string]struct{}{},
		options: map[string]argHandler{
			"--force": nil,
			"-f":      nil,
		},
	},

	"wait": {
		commandPath: "wait",
		subcommands: map[string]struct{}{},
		options:     map[string]argHandler{},
	},
}
