name: E2E Test

on: workflow_dispatch

jobs:
  e2e-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-10.15, windows-2022, ubuntu-20.04]

    name: RD E2E Test - ${{ matrix.os}}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.16'

      - name: Build CI
        run: npm ci

      - name: Run Linter check
        run: npm run lint:nofix

      - name: Run E2E Tests (Required First Run) - ${{ matrix.os }}
        run: npm run test:e2e:first:ci

      - name: WSL Installation check
        if: ${{ matrix.os == 'windows-latest' }}
        run: wsl version && wsl --help

      - name: Get RD Logs - macOS
        if: ${{ matrix.os == 'macos-10.15' }}
        run: printenv && echo $HOME && echo $XDG_DATA_HOME && echo "List all logs from RD" && ls -la $HOME/Library/Logs/rancher-desktop/ && sleep 60

      - name: Get RD Logs - Linux
        if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: printenv && echo $HOME && echo $XDG_DATA_HOME && echo "List all logs from RD" && ls -la $HOME/.local/share/rancher-desktop/logs && sleep 60
    
      - name: Get RD Logs - Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: cd $HOME/AppData/Local/rancher-desktop/logs && dir && sleep 60

      - name: Run E2E Tests - ${{ matrix.os }}
        run: npm run test:e2e:ci

      - name: Zipping files for artifact - macOS
        if: ${{ matrix.os == 'macos-10.15' && failure() }}
        run: |
          zip -r macOS-Runner-Logs.zip $HOME/Library/Logs/rancher-desktop/

      - name: Zipping files for artifact - Linux
        if: ${{ matrix.os == 'ubuntu-20.04' && failure() }}
        run: |
          zip -r linux-Runner-Logs.zip $HOME/.local/share/rancher-desktop/logs

      - name: Zipping files for artifact - Windows
        if: ${{ matrix.os == 'windows-latest' && failure() }}
        run: |
          $Source = "C:\Users\runneradmin\AppData\Local\rancher-desktop\logs"
          $Staging = "D:\a\rancher-desktop\rancher-desktop\rd-logs"
          $Destination = "D:\a\rancher-desktop\rancher-desktop\windows-Runner-Logs.zip"

          Add-Type -AssemblyName System.IO.Compression.Filesystem
          Copy-Item -Path $Source -Destination $Staging -Recurse
          [System.IO.Compression.ZipFile]::CreateFromDirectory($Staging, $Destination)
          Remove-Item -Path $Staging -Force -Recurse

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'macos-10.15' && failure() }}
        with:
          name: webDriverLogs_Screenshots_${{ matrix.os }}
          path: |
            ./macOS-Runner-Logs.zip
            ./wdio.log
            ./*.png

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'ubuntu-20.04' && failure() }}
        with:
          name: webDriverLogs_Screenshots_${{ matrix.os }}
          path: |
            ./linux-Runner-Logs.zip
            ./wdio.log
            ./*.png

      - uses: actions/upload-artifact@v2
        if: ${{ matrix.os == 'windows-latest' && failure() }}
        with:
          name: webDriverLogs_Screenshots_${{ matrix.os }}
          path: |
            ./windows-Runner-Logs.zip
            ./wdio.log
            ./*.png 